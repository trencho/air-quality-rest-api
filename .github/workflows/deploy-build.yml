name: Deploy Flask API with MongoDB

on:
  push:
    branches:
      - master

env:
  OPENVPN_CONFIG: ${{ secrets.OPENVPN_CONFIG }}
  OPENVPN_USERNAME: ${{ secrets.OPENVPN_USERNAME }}
  OPENVPN_PASSWORD: ${{ secrets.OPENVPN_PASSWORD }}
  USER_KEY: ${{ secrets.USER_KEY }}
  SSH_USERNAME: ${{ secrets.SSH_USERNAME }}
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  SERVER_HOST: ${{ secrets.SERVER_HOST }}
  ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
  GIT_REPO_PATH: ${{ secrets.GIT_REPO_PATH }}
  GIT_REPO_USERNAME: ${{ secrets.GIT_REPO_USERNAME }}
  GIT_REPO_NAME: ${{ secrets.GIT_REPO_NAME }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3.5.3

      - name: Install OpenVPN
        run: |
          sudo apt update
          sudo apt install -y openvpn openvpn-systemd-resolved

      - name: Connect to VPN
        uses: kota65535/github-openvpn-connect-action@v2.0.2
        with:
          config_file: ${{ env.OPENVPN_CONFIG }}
          username: ${{ env.OPENVPN_USERNAME }}
          password: ${{ env.OPENVPN_PASSWORD }}
          client_key: ${{ env.USER_KEY }}

      - name: SSH commands for checkout/update git repo, build and deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ env.SERVER_HOST }}
          username: ${{ env.SSH_USERNAME }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            export ACCESS_TOKEN=${{ env.ACCESS_TOKEN }}
            export GIT_REPO_NAME=${{ env.GIT_REPO_NAME }}
            export GIT_REPO_PATH=${{ env.GIT_REPO_PATH }}
            export GIT_REPO_USERNAME=${{ env.GIT_REPO_USERNAME }}
            export SSH_USERNAME=${{ env.SSH_USERNAME }}

            mkdir -p "${GIT_REPO_PATH}"
            chown -R "${SSH_USERNAME}":"${SSH_USERNAME}" "${GIT_REPO_PATH}"
            if [ ! -d "${GIT_REPO_PATH}"/.git ]; then
              git clone https://"${ACCESS_TOKEN}"@github.com/"${GIT_REPO_USERNAME}"/"${GIT_REPO_NAME}".git "${GIT_REPO_PATH}"
            fi
            cd "${GIT_REPO_PATH}" || exit
            git fetch origin
            git reset --hard origin/master
            find .github/workflows -type f -name "*.sh" -exec chmod +x {} +
            {
              .github/workflows/verify_kubernetes.sh
              .github/workflows/verify_docker.sh
              .github/workflows/reload_pods.sh
            } 2>&1