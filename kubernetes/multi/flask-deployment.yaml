apiVersion: v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.multi.yml
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    io.kompose.service: flask
  name: flask
spec:
  replicas: 4
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.multi.yml
        kompose.version: 1.19.0 (f63a961c)
      creationTimestamp: null
      labels:
        io.kompose.service: flask
    spec:
      containers:
        - env:
            - name: APP_ENV
              value: prod
            - name: APP_NAME
              value: air-quality-rest-api
            - name: DARK_SKY_CREDENTIALS
              value: /env/DarkSkyAPI.json
            - name: MONGODB_DATABASE
              value: air-quality
            - name: MONGODB_HOSTNAME
              value: mongodb
            - name: MONGODB_PASSWORD
              value: your_mongodb_password
            - name: MONGODB_USERNAME
              value: flaskuser
            - name: PULSE_ECO_CREDENTIALS
              value: /env/PulseEcoAPI.json
            - name: PYTHONPATH
              value: /src
          image: flask
          name: flask
          resources: {}
          volumeMounts:
            - mountPath: /var/api
              name: flaskdata
      restartPolicy: Always
      volumes:
        - name: flaskdata
          persistentVolumeClaim:
            claimName: flaskdata
status: {}