apiVersion: v1
kind: ServiceAccount
metadata:
  name: cronjob-sa
  namespace: aqra
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cronjob-cert-delete
rules:
  - apiGroups:
      - ''
      - cert-manager.io
    resources:
      - certificates
      - secrets
    verbs:
      - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cronjob-crb
roleRef:
  apiGroup: ''
  kind: ClusterRole
  name: cronjob-cert-delete
subjects:
  - kind: ServiceAccount
    name: cronjob-sa
    namespace: aqra
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker/single/docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  labels:
    io.kompose.service: flask
  name: flask
  namespace: aqra
spec:
  ports:
    - name: http
      port: 80
      targetPort: 80
  selector:
    io.kompose.service: flask
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker/single/docker-compose.yml
    kompose.version: 1.21.0 (992df58d8)
  labels:
    io.kompose.service: flask
  name: flask
  namespace: aqra
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: flask
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker/single/docker-compose.yml
        kompose.version: 1.21.0 (992df58d8)
      labels:
        io.kompose.network/network: 'true'
        io.kompose.service: flask
    spec:
      containers:
        - envFrom:
            - secretRef:
                name: flask-secret
          image: aqra_flask
          imagePullPolicy: Never
          name: flask
          ports:
            - containerPort: 80
          resources: { }
          volumeMounts:
            - mountPath: /var/api
              name: flaskdata
      serviceAccountName: ''
      volumes:
        - name: flaskdata
          persistentVolumeClaim:
            claimName: flaskdata-pvc
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cronjob
  namespace: aqra
spec:
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - command:
                - /bin/sh
                - -c
                - kubectl delete certificate flask-tls -n aqra && kubectl delete secret
                  flask-tls -n aqra
              image: bitnami/kubectl:latest
              name: cronjob
          restartPolicy: OnFailure
          serviceAccountName: cronjob-sa
  schedule: 0 0 1 */2 *
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    kubernetes.io/ingress.class: nginx
  name: flask-ingress
  namespace: aqra
spec:
  rules:
    - host: aqra.feit.ukim.edu.mk
      http:
        paths:
          - backend:
              service:
                name: flask
                port:
                  number: 80
            path: /
            pathType: Prefix
  tls:
    - hosts:
        - aqra.feit.ukim.edu.mk
      secretName: flask-tls