services:
  flask:
    build:
      args:
        BUILDKIT_PROGRESS: plain
      context: ..
      dockerfile: docker/Dockerfile
    container_name: flask
    depends_on:
      - mongo
    deploy:
      replicas: 1
    env_file:
      - .env
    environment:
      APP_ENV: ${APP_ENV:-}
      DARK_SKY_TOKEN: ${DARK_SKY_TOKEN:-}
      GITHUB_TOKEN: ${GITHUB_TOKEN:-}
      MONGO_DATABASE: ${MONGO_DATABASE:-}
      MONGO_PASSWORD: ${MONGO_PASSWORD:-}
      MONGO_USERNAME: ${MONGO_USERNAME:-}
      MONGODB_CONNECTION: ${MONGODB_CONNECTION:-}
      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME:-}
      OPEN_WEATHER_TOKEN: ${OPEN_WEATHER_TOKEN:-}
      PYTHONPATH: ${PYTHONPATH:-}
      REPO_NAME: ${REPO_NAME:-}
      TZ: ${TZ:-}
      VOLUME_PATH: ${VOLUME_PATH:-}
    image: aqra-flask:latest
    networks:
      - network
    ports:
      - "80:80"
    volumes:
      - flask-data:/var/api

  mongo:
    build:
      args:
        BUILDKIT_PROGRESS: plain
      context: ..
      dockerfile: docker/mongo/Dockerfile
    container_name: mongo
    deploy:
      replicas: 1
    env_file:
      - .env
    environment:
      MONDODB_LOG_DIR: ${MONDODB_LOG_DIR:-}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-}
      MONGODB_DATA_DIR: ${MONGODB_DATA_DIR:-}
    expose:
      - 27017
    image: aqra-mongo:latest
    networks:
      - network
    volumes:
      - mongo-data:/data/db

networks:
  network:
    attachable: true
    driver: overlay

volumes:
  flask-data:
    driver: local
  mongo-data:
    driver: local